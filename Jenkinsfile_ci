pipeline {
    agent any

    environment {
        DB_HOST = "mysql"
        DB_PORT = "3306"
        DB_DATABASE = "perpus"
        DB_USERNAME = "root"
        DB_PASSWORD = "12345678"

        DOCKER_IMAGE = "nurghulam/pso-cicd"
        DOCKER_TAG = "latest"
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/NurGhulam04/fp-pso.git', branch: 'update'
            }
        }

        stage('Install Dependencies') {
    steps {
        sh 'docker run --rm -v $(pwd):/app -w /app php:8.3-cli bash -c "apt update && apt install -y unzip git zip libxml2-dev && docker-php-ext-install dom && curl -sS https://getcomposer.org/installer | php && php composer.phar install"'
            }
        }


        stage('Test') {
            steps {
                sh 'docker-compose -f docker-compose.test.yml up --build --abort-on-container-exit'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t laravel-app .'
            }
        }

        stage('Push to DockerHub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_PASS')]) {
                    sh '''
                        echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
                        docker tag laravel-app $DOCKER_IMAGE:$DOCKER_TAG
                        docker push $DOCKER_IMAGE:$DOCKER_TAG
                        docker logout
                    '''
                }
            }
        }
    }
}
