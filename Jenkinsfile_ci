pipeline {
    agent any

    environment {
        DB_HOST = "mysql"
        DB_PORT = "3306"
        DB_DATABASE = "perpus"
        DB_USERNAME = "root"
        DB_PASSWORD = "12345678"

        DOCKER_IMAGE = "nurghulam/pso-cicd"
        DOCKER_TAG = "latest"
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/NurGhulam04/fp-pso.git', branch: 'update'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh '''
                    docker run --rm -v $(pwd):/app -w /app php:8.3-cli bash -c "
                        apt update && \
                        apt install -y unzip git zip libzip-dev libpng-dev libxml2-dev && \
                        docker-php-ext-install zip gd dom && \
                        curl -sS https://getcomposer.org/installer | php && \
                        php composer.phar install
                    "
                '''
            }
        }


        stage('Build Docker Image') {
            steps {
                sh 'docker build -t laravel-app .'
            }
        }


        stage('Test') {
            steps {
                sh '''
                    docker run --rm -v $(pwd):/app -w /app php:8.3-cli bash -c "
                        apt update && \
                        apt install -y libsqlite3-dev && \
                        docker-php-ext-install pdo pdo_sqlite && \
                        php vendor/bin/phpunit
                    "
                '''
            }
        }


        stage('Merge to Main and Push') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'github-token', usernameVariable: 'GITHUB_USER', passwordVariable: 'GITHUB_TOKEN')]) {
                    sh '''
                        set -e # Keluar segera jika ada perintah yang gagal
                        set -x # Cetak perintah dan argumennya saat dieksekusi

                        echo "--- Memulai Stage Merge to Main and Push ---"
                        echo "DEBUG: Nilai GITHUB_USER dari credentials: [$GITHUB_USER]"

                        # Validasi variabel yang dibutuhkan dari credentials
                        if [ -z "$GITHUB_USER" ]; then
                            echo "ERROR: Variabel GITHUB_USER tidak diset dari credentials!"
                            exit 1
                        fi
                         if [ -z "$GITHUB_TOKEN" ]; then
                            echo "ERROR: Variabel GITHUB_TOKEN tidak diset dari credentials!"
                            exit 1
                        fi

                        # Konfigurasi identitas Git
                        git config --global user.email "ghulammusthafa04@gmail.com"
                        git config --global user.name "NurGhulam04"

                        echo "Fetching dari origin..."
                        git fetch origin --prune --tags

                        echo "Checkout branch target: main"
                        git checkout -B "main" "origin/main"

                        echo "Merge branch source: update ke main"
                        git merge "origin/update" -m "Jenkins: Auto-merge branch 'update' into 'main' after successful Docker push"

                        echo "Push branch main ke origin"
                        git push "https://$GITHUB_USER:$GITHUB_TOKEN@github.com/NurGhulam04/fp-pso.git" "main"

                        echo "--- Stage Merge to Main and Push Selesai ---"
                    '''
                }
            }
        }
    }
}
